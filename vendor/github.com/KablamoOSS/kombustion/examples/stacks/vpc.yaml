# To use this example make sure you have the following plugins
#
#

AWSTemplateFormatVersion: 2010-09-09
Description: Roles for test
Parameters:
  VGW: {Description: VPC Gateway, Type: String, Default: vgw-b1033eac}
Mappings: {}
Resources:
  
  DefaultVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.16.0.0/20
      Tags:
        - Name: Default VPC
      EnableDnsSupport: true
      EnableDnsHostnames: true
  DHCPSet:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName: example.com
      DomainNameServers: 172.16.0.2
      NetbiosNodeType: 2
      NtpServers: 169.254.169.123
      Tags:
        - Name: VPCBaseline
  DHCPAssociate:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      DhcpOptionsId: !Ref DHCPSet
      VpcId: !Ref DefaultVPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Name: InternetGateway
  AttachGatewayIgw:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      VpcId: !Ref DefaultVPC
      InternetGatewayId: !Ref InternetGateway
  AttachGatewayVgw:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      VpcId: !Ref DefaultVPC
      VpnGatewayId: !Ref VGW
    DependsOn: !Ref DefaultVPC
  ReservedMgmt1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.0.0/26
      AvailabilityZone: !Select [0, !GetAZs ]
      Tags:
        - Name: ReservedMgmt1
  ReservedMgmt2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.1.0/26
      AvailabilityZone: !Select [1, !GetAZs ]
      Tags:
        - Name: ReservedMgmt2
  ReservedMgmt3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.2.0/26
      AvailabilityZone: !Select [2, !GetAZs ]
      Tags:
        - Name: ReservedMgmt3
  ReservedNet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.0.192/26
      AvailabilityZone: !Select [0, !GetAZs ]
      Tags:
        - Name: ReservedNet1
  ReservedNet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.1.192/26
      AvailabilityZone: !Select [1, !GetAZs ]
      Tags:
        - Name: ReservedNet2
  ReservedNet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.2.192/26
      AvailabilityZone: !Select [2, !GetAZs ]
      Tags:
        - Name: ReservedNet3
  Internal1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.3.0/24
      AvailabilityZone: !Select [0, !GetAZs ]
      Tags:
        - Name: Internal1
  Internal2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.4.0/24
      AvailabilityZone: !Select [1, !GetAZs ]
      Tags:
        - Name: Internal2
  Internal3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.5.0/24
      AvailabilityZone: !Select [2, !GetAZs ]
      Tags:
        - Name: Internal3
  PerimeterInternal1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.6.0/24
      AvailabilityZone: !Select [0, !GetAZs ]
      Tags:
        - Name: PerimeterInternal1
  PerimeterInternal2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.7.0/24
      AvailabilityZone: !Select [1, !GetAZs ]
      Tags:
        - Name: PerimeterInternal2
  PerimeterInternal3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.8.0/24
      AvailabilityZone: !Select [2, !GetAZs ]
      Tags:
        - Name: PerimeterInternal3
  PerimeterExternal1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.9.0/24
      AvailabilityZone: !Select [0, !GetAZs ]
      Tags:
        - Name: PerimeterExternal1
  PerimeterExternal2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.10.0/24
      AvailabilityZone: !Select [1, !GetAZs ]
      Tags:
        - Name: PerimeterExternal2
  PerimeterExternal3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DefaultVPC
      CidrBlock: 172.16.11.0/24
      AvailabilityZone: !Select [2, !GetAZs ]
      Tags:
        - Name: PerimeterExternal3
  InternalRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref DefaultVPC
      Tags:
        - Name: InternalRT
  PublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref DefaultVPC
      Tags:
        - Name: PublicRT
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGatewayVgw
    Properties:
      RouteTableId: !Ref PublicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  InternalRTRoutePropagation:
    Type: AWS::EC2::VPNGatewayRoutePropagation
    Properties: 
      RouteTableIds: !Ref InternalRT
      VpnGatewayId: !Ref VGW
    DependsOn: AttachGatewayVgw
  PublicRTRoutePropagation:
    Type: AWS::EC2::VPNGatewayRoutePropagation
    Properties: 
      RouteTableIds: !Ref PublicRT
      VpnGatewayId: !Ref VGW
    DependsOn: AttachGatewayVgw
  ReservedMgmt1SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ReservedMgmt1
      RouteTableId: !Ref InternalRT
  ReservedMgmt2SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ReservedMgmt2
      RouteTableId: !Ref InternalRT
  ReservedMgmt3SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ReservedMgmt3
      RouteTableId: !Ref InternalRT
  ReservedNet1SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ReservedNet1
      RouteTableId: !Ref PublicRT
  ReservedNet2SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ReservedNet2
      RouteTableId: !Ref PublicRT
  ReservedNet3SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ReservedNet3
      RouteTableId: !Ref PublicRT
  Internal1SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Internal1
      RouteTableId: !Ref InternalRT
  Internal2SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Internal2
      RouteTableId: !Ref InternalRT
  Internal3SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Internal3
      RouteTableId: !Ref InternalRT
  PerimeterInternal1SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PerimeterInternal1
      RouteTableId: !Ref InternalRT
  PerimeterInternal2SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PerimeterInternal2
      RouteTableId: !Ref InternalRT
  PerimeterInternal3SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PerimeterInternal3
      RouteTableId: !Ref InternalRT
  PerimeterExternal1SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PerimeterExternal1
      RouteTableId: !Ref PublicRT
  PerimeterExternal2SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PerimeterExternal2
      RouteTableId: !Ref PublicRT
  PerimeterExternal3SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PerimeterExternal3
      RouteTableId: !Ref PublicRT
  RestrictedSubnetAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref DefaultVPC
      Tags:
        - Name: RestrictedSubnetAcl
  RestrictedSubnetAclEntryInTCPUnReserved:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref RestrictedSubnetAcl
      RuleNumber: 90
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
  RestrictedSubnetAclEntryInUDPUnReserved:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref RestrictedSubnetAcl
      RuleNumber: 91
      Protocol: 17
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
  RestrictedSubnetAclEntryOutTCPUnReserved:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref RestrictedSubnetAcl
      RuleNumber: 90
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
  RestrictedSubnetAclEntryOutUDPUnReserved:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref RestrictedSubnetAcl
      RuleNumber: 91
      Protocol: 17
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
  RestrictedSubnetAclEntryOutPuppet:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref RestrictedSubnetAcl
      RuleNumber: 92
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
  RestrictedSubnetAclEntryOutHTTP:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref RestrictedSubnetAcl
      RuleNumber: 101
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80
  RestrictedSubnetAclEntryOutHTTPS:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref RestrictedSubnetAcl
      RuleNumber: 102
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443
  RestrictedSubnetAclEntryOutSSH:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref RestrictedSubnetAcl
      RuleNumber: 103
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 22
        To: 22
  InternalSubnetAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref DefaultVPC
      Tags:
        - Name: InternalSubnetAcl
  InternalSubnetAclEntryIn:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 172.16.0.0/16
      PortRange:
        From: 1
        To: 65535
  InternalSubnetAclEntryOut:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 172.16.0.0/16
      PortRange:
        From: 1
        To: 65535
  InternalSubnetAclEntryInTCPUnreserved:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 102
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
  InternalSubnetAclEntryInUDPUnreserved:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 103
      Protocol: 7
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535
  InternalSubnetAclEntryOutHTTP:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 102
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80
  InternalSubnetAclEntryOutHTTPS:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 103
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443
  InternalSubnetAclEntryOutTCPUnreserved:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 104
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 172.16.0.0/16
      PortRange:
        From: 1024
        To: 65535
  InternalSubnetAclEntryOutUDPUnreserved:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 105
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 172.16.0.0/16
      PortRange:
        From: 1024
        To: 65535
  InternalSubnetAclEntryOutTCPDNS:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 110
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 53
        To: 53
  InternalSubnetAclEntryOutUDPDNS:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 111
      Protocol: 17
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 53
        To: 53
  InternalSubnetAclEntryOutSSH:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 150
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 22
        To: 22
  RestrictedSubnetAclEntryInHTTP:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 101
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80
  RestrictedSubnetAclEntryInHTTPS:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 102
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443
  RestrictedSubnetAclEntryIn:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 110
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 172.16.0.0/16
      PortRange:
        From: 1
        To: 65535
  RestrictedSubnetAclEntryOut:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 110
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 172.16.0.0/16
      PortRange:
        From: 1
        To: 65535
  RestrictedSubnetAclEntryRoutingIn:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 130
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 192.168.0.0/16
      PortRange:
        From: 1
        To: 65535
  RestrictedSubnetAclEntryRoutingOut:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 130
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 192.168.0.0/16
      PortRange:
        From: 1
        To: 65535
  RestrictedSubnetAclEntryInDNSTCP:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 150
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 172.16.0.0/16
      PortRange:
        From: 53
        To: 53
  RestrictedSubnetAclEntryOutDNSTCP:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 150
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 172.16.0.0/16
      PortRange:
        From: 53
        To: 53
  RestrictedSubnetAclEntryInDNSUDP:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 151
      Protocol: 17
      RuleAction: allow
      Egress: false
      CidrBlock: 172.16.0.0/16
      PortRange:
        From: 53
        To: 53
  RestrictedSubnetAclEntryOutDNSUDP:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 151
      Protocol: 17
      RuleAction: allow
      Egress: true
      CidrBlock: 172.16.0.0/16
      PortRange:
        From: 53
        To: 53
  RestrictedSubnetAclEntryInNetBios:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 152
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 172.16.0.0/16
      PortRange:
        From: 389
        To: 389
  RestrictedSubnetAclEntryOutNetBios:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 152
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 172.16.0.0/16
      PortRange:
        From: 389
        To: 389
  RestrictedSubnetAclEntryInNetBios1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 153
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 172.16.0.0/16
      PortRange:
        From: 137
        To: 139
  RestrictedSubnetAclEntryOutNetBios1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref InternalSubnetAcl
      RuleNumber: 153
      Protocol: 6
      RuleAction: allow
      Egress: true
      CidrBlock: 172.16.0.0/16
      PortRange:
        From: 137
        To: 139
  ReservedMgmt1SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref ReservedMgmt1
      NetworkAclId: !Ref InternalSubnetAcl
  ReservedMgmt2SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref ReservedMgmt2
      NetworkAclId: !Ref InternalSubnetAcl
  ReservedMgmt3SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref ReservedMgmt1
      NetworkAclId: !Ref InternalSubnetAcl
  ReservedNet1SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref ReservedNet1
      NetworkAclId: !Ref RestrictedSubnetAcl
  ReservedNet2SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref ReservedNet2
      NetworkAclId: !Ref RestrictedSubnetAcl
  ReservedNet3SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref ReservedNet3
      NetworkAclId: !Ref RestrictedSubnetAcl
  Internal1SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref Internal1
      NetworkAclId: !Ref InternalSubnetAcl
  Internal2SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref Internal2
      NetworkAclId: !Ref InternalSubnetAcl
  Internal3SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref Internal3
      NetworkAclId: !Ref InternalSubnetAcl
  PerimeterInternal1SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PerimeterInternal1
      NetworkAclId: !Ref InternalSubnetAcl
  PerimeterInternal2SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PerimeterInternal2
      NetworkAclId: !Ref InternalSubnetAcl
  PerimeterInternal3SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PerimeterInternal3
      NetworkAclId: !Ref InternalSubnetAcl
  PerimeterExternal1SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PerimeterExternal1
      NetworkAclId: !Ref RestrictedSubnetAcl
  PerimeterExternal2SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PerimeterExternal2
      NetworkAclId: !Ref RestrictedSubnetAcl
  PerimeterExternal3SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PerimeterExternal3
      NetworkAclId: !Ref RestrictedSubnetAcl