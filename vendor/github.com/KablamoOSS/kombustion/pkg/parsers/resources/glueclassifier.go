package resources

// DO NOT EDIT: This file is autogenerated by running 'go generate'
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"github.com/KablamoOSS/kombustion/pkg/parsers/properties"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
	"log"
)

// GlueClassifier Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-glue-classifier.html
type GlueClassifier struct {
	Type       string                   `yaml:"Type"`
	Properties GlueClassifierProperties `yaml:"Properties"`
	Condition  interface{}              `yaml:"Condition,omitempty"`
	Metadata   interface{}              `yaml:"Metadata,omitempty"`
	DependsOn  interface{}              `yaml:"DependsOn,omitempty"`
}

// GlueClassifier Properties
type GlueClassifierProperties struct {
	GrokClassifier *properties.ClassifierGrokClassifier `yaml:"GrokClassifier,omitempty"`
}

// NewGlueClassifier constructor creates a new GlueClassifier
func NewGlueClassifier(properties GlueClassifierProperties, deps ...interface{}) GlueClassifier {
	return GlueClassifier{
		Type:       "AWS::Glue::Classifier",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseGlueClassifier parses GlueClassifier
func ParseGlueClassifier(name string, data string) (cf types.TemplateObject, err error) {
	var resource GlueClassifier
	if err = yaml.Unmarshal([]byte(data), &resource); err != nil {
		return
	}
	if errs := resource.Properties.Validate(); len(errs) > 0 {
		for _, err = range errs {
			log.Println("WARNING: GlueClassifier - ", err)
		}
		return
	}
	cf = types.TemplateObject{name: resource}
	return
}

// ParseGlueClassifier validator
func (resource GlueClassifier) Validate() []error {
	return resource.Properties.Validate()
}

// ParseGlueClassifierProperties validator
func (resource GlueClassifierProperties) Validate() []error {
	errs := []error{}
	return errs
}
