package resources

// DO NOT EDIT: This file is autogenerated by running 'go generate'
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/pkg/parsers/properties"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
	"log"
)

// WAFRegionalWebACL Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafregional-webacl.html
type WAFRegionalWebACL struct {
	Type       string                      `yaml:"Type"`
	Properties WAFRegionalWebACLProperties `yaml:"Properties"`
	Condition  interface{}                 `yaml:"Condition,omitempty"`
	Metadata   interface{}                 `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                 `yaml:"DependsOn,omitempty"`
}

// WAFRegionalWebACL Properties
type WAFRegionalWebACLProperties struct {
	MetricName    interface{}              `yaml:"MetricName"`
	Name          interface{}              `yaml:"Name"`
	Rules         interface{}              `yaml:"Rules,omitempty"`
	DefaultAction *properties.WebACLAction `yaml:"DefaultAction"`
}

// NewWAFRegionalWebACL constructor creates a new WAFRegionalWebACL
func NewWAFRegionalWebACL(properties WAFRegionalWebACLProperties, deps ...interface{}) WAFRegionalWebACL {
	return WAFRegionalWebACL{
		Type:       "AWS::WAFRegional::WebACL",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseWAFRegionalWebACL parses WAFRegionalWebACL
func ParseWAFRegionalWebACL(name string, data string) (cf types.TemplateObject, err error) {
	var resource WAFRegionalWebACL
	if err = yaml.Unmarshal([]byte(data), &resource); err != nil {
		return
	}
	if errs := resource.Properties.Validate(); len(errs) > 0 {
		for _, err = range errs {
			log.Println("WARNING: WAFRegionalWebACL - ", err)
		}
		return
	}
	cf = types.TemplateObject{name: resource}
	return
}

// ParseWAFRegionalWebACL validator
func (resource WAFRegionalWebACL) Validate() []error {
	return resource.Properties.Validate()
}

// ParseWAFRegionalWebACLProperties validator
func (resource WAFRegionalWebACLProperties) Validate() []error {
	errs := []error{}
	if resource.MetricName == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'MetricName'"))
	}
	if resource.Name == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'Name'"))
	}
	if resource.DefaultAction == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'DefaultAction'"))
	} else {
		errs = append(errs, resource.DefaultAction.Validate()...)
	}
	return errs
}
