package resources

// DO NOT EDIT: This file is autogenerated by running 'go generate'
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
	"log"
)

// ApiGatewayModel Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-model.html
type ApiGatewayModel struct {
	Type       string                    `yaml:"Type"`
	Properties ApiGatewayModelProperties `yaml:"Properties"`
	Condition  interface{}               `yaml:"Condition,omitempty"`
	Metadata   interface{}               `yaml:"Metadata,omitempty"`
	DependsOn  interface{}               `yaml:"DependsOn,omitempty"`
}

// ApiGatewayModel Properties
type ApiGatewayModelProperties struct {
	ContentType interface{} `yaml:"ContentType,omitempty"`
	Description interface{} `yaml:"Description,omitempty"`
	Name        interface{} `yaml:"Name,omitempty"`
	RestApiId   interface{} `yaml:"RestApiId"`
	Schema      interface{} `yaml:"Schema,omitempty"`
}

// NewApiGatewayModel constructor creates a new ApiGatewayModel
func NewApiGatewayModel(properties ApiGatewayModelProperties, deps ...interface{}) ApiGatewayModel {
	return ApiGatewayModel{
		Type:       "AWS::ApiGateway::Model",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseApiGatewayModel parses ApiGatewayModel
func ParseApiGatewayModel(name string, data string) (cf types.TemplateObject, err error) {
	var resource ApiGatewayModel
	if err = yaml.Unmarshal([]byte(data), &resource); err != nil {
		return
	}
	if errs := resource.Properties.Validate(); len(errs) > 0 {
		for _, err = range errs {
			log.Println("WARNING: ApiGatewayModel - ", err)
		}
		return
	}
	cf = types.TemplateObject{name: resource}
	return
}

// ParseApiGatewayModel validator
func (resource ApiGatewayModel) Validate() []error {
	return resource.Properties.Validate()
}

// ParseApiGatewayModelProperties validator
func (resource ApiGatewayModelProperties) Validate() []error {
	errs := []error{}
	if resource.RestApiId == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'RestApiId'"))
	}
	return errs
}
