package resources

// DO NOT EDIT: This file is autogenerated by running 'go generate'
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
	"log"
)

// RDSDBClusterParameterGroup Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbclusterparametergroup.html
type RDSDBClusterParameterGroup struct {
	Type       string                               `yaml:"Type"`
	Properties RDSDBClusterParameterGroupProperties `yaml:"Properties"`
	Condition  interface{}                          `yaml:"Condition,omitempty"`
	Metadata   interface{}                          `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                          `yaml:"DependsOn,omitempty"`
}

// RDSDBClusterParameterGroup Properties
type RDSDBClusterParameterGroupProperties struct {
	Description interface{} `yaml:"Description"`
	Family      interface{} `yaml:"Family"`
	Parameters  interface{} `yaml:"Parameters"`
	Tags        interface{} `yaml:"Tags,omitempty"`
}

// NewRDSDBClusterParameterGroup constructor creates a new RDSDBClusterParameterGroup
func NewRDSDBClusterParameterGroup(properties RDSDBClusterParameterGroupProperties, deps ...interface{}) RDSDBClusterParameterGroup {
	return RDSDBClusterParameterGroup{
		Type:       "AWS::RDS::DBClusterParameterGroup",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseRDSDBClusterParameterGroup parses RDSDBClusterParameterGroup
func ParseRDSDBClusterParameterGroup(name string, data string) (cf types.TemplateObject, err error) {
	var resource RDSDBClusterParameterGroup
	if err = yaml.Unmarshal([]byte(data), &resource); err != nil {
		return
	}
	if errs := resource.Properties.Validate(); len(errs) > 0 {
		for _, err = range errs {
			log.Println("WARNING: RDSDBClusterParameterGroup - ", err)
		}
		return
	}
	cf = types.TemplateObject{name: resource}
	return
}

// ParseRDSDBClusterParameterGroup validator
func (resource RDSDBClusterParameterGroup) Validate() []error {
	return resource.Properties.Validate()
}

// ParseRDSDBClusterParameterGroupProperties validator
func (resource RDSDBClusterParameterGroupProperties) Validate() []error {
	errs := []error{}
	if resource.Description == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'Description'"))
	}
	if resource.Family == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'Family'"))
	}
	if resource.Parameters == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'Parameters'"))
	}
	return errs
}
