package resources

// DO NOT EDIT: This file is autogenerated by running 'go generate'
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/pkg/parsers/properties"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
	"log"
)

// EMRInstanceGroupConfig Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emr-instancegroupconfig.html
type EMRInstanceGroupConfig struct {
	Type       string                           `yaml:"Type"`
	Properties EMRInstanceGroupConfigProperties `yaml:"Properties"`
	Condition  interface{}                      `yaml:"Condition,omitempty"`
	Metadata   interface{}                      `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                      `yaml:"DependsOn,omitempty"`
}

// EMRInstanceGroupConfig Properties
type EMRInstanceGroupConfigProperties struct {
	BidPrice          interface{}                                      `yaml:"BidPrice,omitempty"`
	InstanceCount     interface{}                                      `yaml:"InstanceCount"`
	InstanceRole      interface{}                                      `yaml:"InstanceRole"`
	InstanceType      interface{}                                      `yaml:"InstanceType"`
	JobFlowId         interface{}                                      `yaml:"JobFlowId"`
	Market            interface{}                                      `yaml:"Market,omitempty"`
	Name              interface{}                                      `yaml:"Name,omitempty"`
	Configurations    interface{}                                      `yaml:"Configurations,omitempty"`
	EbsConfiguration  *properties.InstanceGroupConfigEbsConfiguration  `yaml:"EbsConfiguration,omitempty"`
	AutoScalingPolicy *properties.InstanceGroupConfigAutoScalingPolicy `yaml:"AutoScalingPolicy,omitempty"`
}

// NewEMRInstanceGroupConfig constructor creates a new EMRInstanceGroupConfig
func NewEMRInstanceGroupConfig(properties EMRInstanceGroupConfigProperties, deps ...interface{}) EMRInstanceGroupConfig {
	return EMRInstanceGroupConfig{
		Type:       "AWS::EMR::InstanceGroupConfig",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseEMRInstanceGroupConfig parses EMRInstanceGroupConfig
func ParseEMRInstanceGroupConfig(name string, data string) (cf types.TemplateObject, err error) {
	var resource EMRInstanceGroupConfig
	if err = yaml.Unmarshal([]byte(data), &resource); err != nil {
		return
	}
	if errs := resource.Properties.Validate(); len(errs) > 0 {
		for _, err = range errs {
			log.Println("WARNING: EMRInstanceGroupConfig - ", err)
		}
		return
	}
	cf = types.TemplateObject{name: resource}
	return
}

// ParseEMRInstanceGroupConfig validator
func (resource EMRInstanceGroupConfig) Validate() []error {
	return resource.Properties.Validate()
}

// ParseEMRInstanceGroupConfigProperties validator
func (resource EMRInstanceGroupConfigProperties) Validate() []error {
	errs := []error{}
	if resource.InstanceCount == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'InstanceCount'"))
	}
	if resource.InstanceRole == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'InstanceRole'"))
	}
	if resource.InstanceType == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'InstanceType'"))
	}
	if resource.JobFlowId == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'JobFlowId'"))
	}
	return errs
}
