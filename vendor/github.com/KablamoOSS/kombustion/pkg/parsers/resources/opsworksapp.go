package resources

// DO NOT EDIT: This file is autogenerated by running 'go generate'
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/pkg/parsers/properties"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
	"log"
)

// OpsWorksApp Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html
type OpsWorksApp struct {
	Type       string                `yaml:"Type"`
	Properties OpsWorksAppProperties `yaml:"Properties"`
	Condition  interface{}           `yaml:"Condition,omitempty"`
	Metadata   interface{}           `yaml:"Metadata,omitempty"`
	DependsOn  interface{}           `yaml:"DependsOn,omitempty"`
}

// OpsWorksApp Properties
type OpsWorksAppProperties struct {
	Description      interface{}                     `yaml:"Description,omitempty"`
	EnableSsl        interface{}                     `yaml:"EnableSsl,omitempty"`
	Name             interface{}                     `yaml:"Name"`
	Shortname        interface{}                     `yaml:"Shortname,omitempty"`
	StackId          interface{}                     `yaml:"StackId"`
	Type             interface{}                     `yaml:"Type"`
	SslConfiguration *properties.AppSslConfiguration `yaml:"SslConfiguration,omitempty"`
	AppSource        *properties.AppSource           `yaml:"AppSource,omitempty"`
	Attributes       interface{}                     `yaml:"Attributes,omitempty"`
	DataSources      interface{}                     `yaml:"DataSources,omitempty"`
	Domains          interface{}                     `yaml:"Domains,omitempty"`
	Environment      interface{}                     `yaml:"Environment,omitempty"`
}

// NewOpsWorksApp constructor creates a new OpsWorksApp
func NewOpsWorksApp(properties OpsWorksAppProperties, deps ...interface{}) OpsWorksApp {
	return OpsWorksApp{
		Type:       "AWS::OpsWorks::App",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseOpsWorksApp parses OpsWorksApp
func ParseOpsWorksApp(name string, data string) (cf types.TemplateObject, err error) {
	var resource OpsWorksApp
	if err = yaml.Unmarshal([]byte(data), &resource); err != nil {
		return
	}
	if errs := resource.Properties.Validate(); len(errs) > 0 {
		for _, err = range errs {
			log.Println("WARNING: OpsWorksApp - ", err)
		}
		return
	}
	cf = types.TemplateObject{name: resource}
	return
}

// ParseOpsWorksApp validator
func (resource OpsWorksApp) Validate() []error {
	return resource.Properties.Validate()
}

// ParseOpsWorksAppProperties validator
func (resource OpsWorksAppProperties) Validate() []error {
	errs := []error{}
	if resource.Name == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'Name'"))
	}
	if resource.StackId == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'StackId'"))
	}
	if resource.Type == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'Type'"))
	}
	return errs
}
