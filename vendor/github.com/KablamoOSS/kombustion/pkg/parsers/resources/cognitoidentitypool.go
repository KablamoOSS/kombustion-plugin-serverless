package resources

// DO NOT EDIT: This file is autogenerated by running 'go generate'
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/pkg/parsers/properties"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
	"log"
)

// CognitoIdentityPool Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html
type CognitoIdentityPool struct {
	Type       string                        `yaml:"Type"`
	Properties CognitoIdentityPoolProperties `yaml:"Properties"`
	Condition  interface{}                   `yaml:"Condition,omitempty"`
	Metadata   interface{}                   `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                   `yaml:"DependsOn,omitempty"`
}

// CognitoIdentityPool Properties
type CognitoIdentityPoolProperties struct {
	AllowUnauthenticatedIdentities interface{}                            `yaml:"AllowUnauthenticatedIdentities"`
	CognitoEvents                  interface{}                            `yaml:"CognitoEvents,omitempty"`
	DeveloperProviderName          interface{}                            `yaml:"DeveloperProviderName,omitempty"`
	IdentityPoolName               interface{}                            `yaml:"IdentityPoolName,omitempty"`
	SupportedLoginProviders        interface{}                            `yaml:"SupportedLoginProviders,omitempty"`
	PushSync                       *properties.IdentityPoolPushSync       `yaml:"PushSync,omitempty"`
	CognitoIdentityProviders       interface{}                            `yaml:"CognitoIdentityProviders,omitempty"`
	OpenIdConnectProviderARNs      interface{}                            `yaml:"OpenIdConnectProviderARNs,omitempty"`
	SamlProviderARNs               interface{}                            `yaml:"SamlProviderARNs,omitempty"`
	CognitoStreams                 *properties.IdentityPoolCognitoStreams `yaml:"CognitoStreams,omitempty"`
}

// NewCognitoIdentityPool constructor creates a new CognitoIdentityPool
func NewCognitoIdentityPool(properties CognitoIdentityPoolProperties, deps ...interface{}) CognitoIdentityPool {
	return CognitoIdentityPool{
		Type:       "AWS::Cognito::IdentityPool",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseCognitoIdentityPool parses CognitoIdentityPool
func ParseCognitoIdentityPool(name string, data string) (cf types.TemplateObject, err error) {
	var resource CognitoIdentityPool
	if err = yaml.Unmarshal([]byte(data), &resource); err != nil {
		return
	}
	if errs := resource.Properties.Validate(); len(errs) > 0 {
		for _, err = range errs {
			log.Println("WARNING: CognitoIdentityPool - ", err)
		}
		return
	}
	cf = types.TemplateObject{name: resource}
	return
}

// ParseCognitoIdentityPool validator
func (resource CognitoIdentityPool) Validate() []error {
	return resource.Properties.Validate()
}

// ParseCognitoIdentityPoolProperties validator
func (resource CognitoIdentityPoolProperties) Validate() []error {
	errs := []error{}
	if resource.AllowUnauthenticatedIdentities == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'AllowUnauthenticatedIdentities'"))
	}
	return errs
}
