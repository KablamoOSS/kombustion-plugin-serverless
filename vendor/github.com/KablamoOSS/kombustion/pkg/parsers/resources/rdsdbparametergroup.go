package resources

// DO NOT EDIT: This file is autogenerated by running 'go generate'
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
	"log"
)

// RDSDBParameterGroup Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-dbparametergroup.html
type RDSDBParameterGroup struct {
	Type       string                        `yaml:"Type"`
	Properties RDSDBParameterGroupProperties `yaml:"Properties"`
	Condition  interface{}                   `yaml:"Condition,omitempty"`
	Metadata   interface{}                   `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                   `yaml:"DependsOn,omitempty"`
}

// RDSDBParameterGroup Properties
type RDSDBParameterGroupProperties struct {
	Description interface{} `yaml:"Description"`
	Family      interface{} `yaml:"Family"`
	Parameters  interface{} `yaml:"Parameters,omitempty"`
	Tags        interface{} `yaml:"Tags,omitempty"`
}

// NewRDSDBParameterGroup constructor creates a new RDSDBParameterGroup
func NewRDSDBParameterGroup(properties RDSDBParameterGroupProperties, deps ...interface{}) RDSDBParameterGroup {
	return RDSDBParameterGroup{
		Type:       "AWS::RDS::DBParameterGroup",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseRDSDBParameterGroup parses RDSDBParameterGroup
func ParseRDSDBParameterGroup(name string, data string) (cf types.TemplateObject, err error) {
	var resource RDSDBParameterGroup
	if err = yaml.Unmarshal([]byte(data), &resource); err != nil {
		return
	}
	if errs := resource.Properties.Validate(); len(errs) > 0 {
		for _, err = range errs {
			log.Println("WARNING: RDSDBParameterGroup - ", err)
		}
		return
	}
	cf = types.TemplateObject{name: resource}
	return
}

// ParseRDSDBParameterGroup validator
func (resource RDSDBParameterGroup) Validate() []error {
	return resource.Properties.Validate()
}

// ParseRDSDBParameterGroupProperties validator
func (resource RDSDBParameterGroupProperties) Validate() []error {
	errs := []error{}
	if resource.Description == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'Description'"))
	}
	if resource.Family == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'Family'"))
	}
	return errs
}
