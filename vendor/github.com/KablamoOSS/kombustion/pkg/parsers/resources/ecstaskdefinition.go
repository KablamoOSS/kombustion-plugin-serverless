package resources

// DO NOT EDIT: This file is autogenerated by running 'go generate'
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
	"log"
)

// ECSTaskDefinition Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html
type ECSTaskDefinition struct {
	Type       string                      `yaml:"Type"`
	Properties ECSTaskDefinitionProperties `yaml:"Properties"`
	Condition  interface{}                 `yaml:"Condition,omitempty"`
	Metadata   interface{}                 `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                 `yaml:"DependsOn,omitempty"`
}

// ECSTaskDefinition Properties
type ECSTaskDefinitionProperties struct {
	Cpu                     interface{} `yaml:"Cpu,omitempty"`
	ExecutionRoleArn        interface{} `yaml:"ExecutionRoleArn,omitempty"`
	Family                  interface{} `yaml:"Family,omitempty"`
	Memory                  interface{} `yaml:"Memory,omitempty"`
	NetworkMode             interface{} `yaml:"NetworkMode,omitempty"`
	TaskRoleArn             interface{} `yaml:"TaskRoleArn,omitempty"`
	ContainerDefinitions    interface{} `yaml:"ContainerDefinitions,omitempty"`
	PlacementConstraints    interface{} `yaml:"PlacementConstraints,omitempty"`
	RequiresCompatibilities interface{} `yaml:"RequiresCompatibilities,omitempty"`
	Volumes                 interface{} `yaml:"Volumes,omitempty"`
}

// NewECSTaskDefinition constructor creates a new ECSTaskDefinition
func NewECSTaskDefinition(properties ECSTaskDefinitionProperties, deps ...interface{}) ECSTaskDefinition {
	return ECSTaskDefinition{
		Type:       "AWS::ECS::TaskDefinition",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseECSTaskDefinition parses ECSTaskDefinition
func ParseECSTaskDefinition(name string, data string) (cf types.TemplateObject, err error) {
	var resource ECSTaskDefinition
	if err = yaml.Unmarshal([]byte(data), &resource); err != nil {
		return
	}
	if errs := resource.Properties.Validate(); len(errs) > 0 {
		for _, err = range errs {
			log.Println("WARNING: ECSTaskDefinition - ", err)
		}
		return
	}
	cf = types.TemplateObject{name: resource}
	return
}

// ParseECSTaskDefinition validator
func (resource ECSTaskDefinition) Validate() []error {
	return resource.Properties.Validate()
}

// ParseECSTaskDefinitionProperties validator
func (resource ECSTaskDefinitionProperties) Validate() []error {
	errs := []error{}
	return errs
}
