package resources

// DO NOT EDIT: This file is autogenerated by running 'go generate'
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/pkg/parsers/properties"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
	"log"
)

// SSMPatchBaseline Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-patchbaseline.html
type SSMPatchBaseline struct {
	Type       string                     `yaml:"Type"`
	Properties SSMPatchBaselineProperties `yaml:"Properties"`
	Condition  interface{}                `yaml:"Condition,omitempty"`
	Metadata   interface{}                `yaml:"Metadata,omitempty"`
	DependsOn  interface{}                `yaml:"DependsOn,omitempty"`
}

// SSMPatchBaseline Properties
type SSMPatchBaselineProperties struct {
	ApprovedPatchesComplianceLevel   interface{}                               `yaml:"ApprovedPatchesComplianceLevel,omitempty"`
	ApprovedPatchesEnableNonSecurity interface{}                               `yaml:"ApprovedPatchesEnableNonSecurity,omitempty"`
	Description                      interface{}                               `yaml:"Description,omitempty"`
	Name                             interface{}                               `yaml:"Name"`
	OperatingSystem                  interface{}                               `yaml:"OperatingSystem,omitempty"`
	ApprovalRules                    *properties.PatchBaselineRuleGroup        `yaml:"ApprovalRules,omitempty"`
	GlobalFilters                    *properties.PatchBaselinePatchFilterGroup `yaml:"GlobalFilters,omitempty"`
	ApprovedPatches                  interface{}                               `yaml:"ApprovedPatches,omitempty"`
	PatchGroups                      interface{}                               `yaml:"PatchGroups,omitempty"`
	RejectedPatches                  interface{}                               `yaml:"RejectedPatches,omitempty"`
	Sources                          interface{}                               `yaml:"Sources,omitempty"`
}

// NewSSMPatchBaseline constructor creates a new SSMPatchBaseline
func NewSSMPatchBaseline(properties SSMPatchBaselineProperties, deps ...interface{}) SSMPatchBaseline {
	return SSMPatchBaseline{
		Type:       "AWS::SSM::PatchBaseline",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseSSMPatchBaseline parses SSMPatchBaseline
func ParseSSMPatchBaseline(name string, data string) (cf types.TemplateObject, err error) {
	var resource SSMPatchBaseline
	if err = yaml.Unmarshal([]byte(data), &resource); err != nil {
		return
	}
	if errs := resource.Properties.Validate(); len(errs) > 0 {
		for _, err = range errs {
			log.Println("WARNING: SSMPatchBaseline - ", err)
		}
		return
	}
	cf = types.TemplateObject{name: resource}
	return
}

// ParseSSMPatchBaseline validator
func (resource SSMPatchBaseline) Validate() []error {
	return resource.Properties.Validate()
}

// ParseSSMPatchBaselineProperties validator
func (resource SSMPatchBaselineProperties) Validate() []error {
	errs := []error{}
	if resource.Name == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'Name'"))
	}
	return errs
}
