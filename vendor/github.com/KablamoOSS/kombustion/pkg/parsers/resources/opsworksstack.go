package resources

// DO NOT EDIT: This file is autogenerated by running 'go generate'
// It's generated by "github.com/KablamoOSS/kombustion/generate"

import (
	"fmt"
	"github.com/KablamoOSS/kombustion/pkg/parsers/properties"
	"github.com/KablamoOSS/kombustion/types"
	yaml "github.com/KablamoOSS/yaml"
	"log"
)

// OpsWorksStack Documentation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-stack.html
type OpsWorksStack struct {
	Type       string                  `yaml:"Type"`
	Properties OpsWorksStackProperties `yaml:"Properties"`
	Condition  interface{}             `yaml:"Condition,omitempty"`
	Metadata   interface{}             `yaml:"Metadata,omitempty"`
	DependsOn  interface{}             `yaml:"DependsOn,omitempty"`
}

// OpsWorksStack Properties
type OpsWorksStackProperties struct {
	AgentVersion              interface{}                                `yaml:"AgentVersion,omitempty"`
	ClonePermissions          interface{}                                `yaml:"ClonePermissions,omitempty"`
	CustomJson                interface{}                                `yaml:"CustomJson,omitempty"`
	DefaultAvailabilityZone   interface{}                                `yaml:"DefaultAvailabilityZone,omitempty"`
	DefaultInstanceProfileArn interface{}                                `yaml:"DefaultInstanceProfileArn"`
	DefaultOs                 interface{}                                `yaml:"DefaultOs,omitempty"`
	DefaultRootDeviceType     interface{}                                `yaml:"DefaultRootDeviceType,omitempty"`
	DefaultSshKeyName         interface{}                                `yaml:"DefaultSshKeyName,omitempty"`
	DefaultSubnetId           interface{}                                `yaml:"DefaultSubnetId,omitempty"`
	EcsClusterArn             interface{}                                `yaml:"EcsClusterArn,omitempty"`
	HostnameTheme             interface{}                                `yaml:"HostnameTheme,omitempty"`
	Name                      interface{}                                `yaml:"Name"`
	ServiceRoleArn            interface{}                                `yaml:"ServiceRoleArn"`
	SourceStackId             interface{}                                `yaml:"SourceStackId,omitempty"`
	UseCustomCookbooks        interface{}                                `yaml:"UseCustomCookbooks,omitempty"`
	UseOpsworksSecurityGroups interface{}                                `yaml:"UseOpsworksSecurityGroups,omitempty"`
	VpcId                     interface{}                                `yaml:"VpcId,omitempty"`
	ConfigurationManager      *properties.StackStackConfigurationManager `yaml:"ConfigurationManager,omitempty"`
	CustomCookbooksSource     *properties.StackSource                    `yaml:"CustomCookbooksSource,omitempty"`
	Attributes                interface{}                                `yaml:"Attributes,omitempty"`
	Tags                      interface{}                                `yaml:"Tags,omitempty"`
	CloneAppIds               interface{}                                `yaml:"CloneAppIds,omitempty"`
	ElasticIps                interface{}                                `yaml:"ElasticIps,omitempty"`
	RdsDbInstances            interface{}                                `yaml:"RdsDbInstances,omitempty"`
	ChefConfiguration         *properties.StackChefConfiguration         `yaml:"ChefConfiguration,omitempty"`
}

// NewOpsWorksStack constructor creates a new OpsWorksStack
func NewOpsWorksStack(properties OpsWorksStackProperties, deps ...interface{}) OpsWorksStack {
	return OpsWorksStack{
		Type:       "AWS::OpsWorks::Stack",
		Properties: properties,
		DependsOn:  deps,
	}
}

// ParseOpsWorksStack parses OpsWorksStack
func ParseOpsWorksStack(name string, data string) (cf types.TemplateObject, err error) {
	var resource OpsWorksStack
	if err = yaml.Unmarshal([]byte(data), &resource); err != nil {
		return
	}
	if errs := resource.Properties.Validate(); len(errs) > 0 {
		for _, err = range errs {
			log.Println("WARNING: OpsWorksStack - ", err)
		}
		return
	}
	cf = types.TemplateObject{name: resource}
	return
}

// ParseOpsWorksStack validator
func (resource OpsWorksStack) Validate() []error {
	return resource.Properties.Validate()
}

// ParseOpsWorksStackProperties validator
func (resource OpsWorksStackProperties) Validate() []error {
	errs := []error{}
	if resource.DefaultInstanceProfileArn == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'DefaultInstanceProfileArn'"))
	}
	if resource.Name == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'Name'"))
	}
	if resource.ServiceRoleArn == nil {
		errs = append(errs, fmt.Errorf("Missing required field 'ServiceRoleArn'"))
	}
	return errs
}
